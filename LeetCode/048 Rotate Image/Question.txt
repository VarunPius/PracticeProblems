 Author:     Varun Pius Rodrigues
 Date:       Dec 15, 2016
 Problem:    Rotate Image
 Difficulty: Medium
 Source:     https://leetcode.com/problems/

/**********************************************************************************
*
* You are given an n x n 2D matrix representing an image.
* Rotate the image by 90 degrees (clockwise).
* Follow up:
* Could you do this in-place?
*
**********************************************************************************/

/***** Solution Explanation ******/
Example
Given a matrix:
[1,2,3]
[4,5,6]
[7,8,9]
Rotate it by 90 degrees (clockwise), return:
[7,4,1]
[8,5,2]
[9,6,3]

Solution
The key to the problem is finding a way to swap elements, which requires an intermediate step as explained by @shichaotan. The intermediate step involves reversing the row order. The swap step involves diagonally swapping all but the 1st element.

 Input     Inter. Step   Swap Step
[1,2,3]      [7,8,9]      [7,4,1]
[4,5,6]  =>  [4,5,6]  =>  [8,5,2]
[7,8,9]      [1,2,3]      [9,6,3]
Now, let's evaluate the each swap (the headings represent positions):

 Input     Inter. Step    01<->10  02<->20  12<->21
[1,2,3]      [7,8,9]      [7,4,9]  [7,4,1]  [7,4,1]
[4,5,6]  =>  [4,5,6]  =>  [8,5,6]=>[8,5,6]=>[8,5,2]
[7,8,9]      [1,2,3]      [1,2,3]  [9,2,3]  [9,6,3]
The Code
See this GitHub link for my complete solution with test cases.
